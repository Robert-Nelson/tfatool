#!/usr/bin/env python3
#coding: UTF-8

from argparse import ArgumentParser
from requests import RequestException
from tfatool import cgi, sync


parser = ArgumentParser()
parser.add_argument("-r", "--remote-dir", default=cgi.DEFAULT_DIR)
parser.add_argument("-d", "--local-dir", default=".")
parser.add_argument("-l", "--list-files", action="store_true")
parser.add_argument("-c", "--count-files", action="store_true")
parser.add_argument("-s", "--sync-files", action="store_true")
parser.add_argument("-t", "--sync-mode", default="name",
                    choices=["timestamp", "name"])
parser.add_argument("-j", "--only-jpg", action="store_true")


def run():
    args = parser.parse_args()
    try:
        if args.list_files:
            print_file_list(args)
        if args.count_files:
            print_file_count(args)
    except RequestException as e:
        print("\nHTTP request exception: {}".format(e))
    sync.get_most_recent_file()


def print_file_list(args):
    files = cgi.list_files(remote_dir=args.remote_dir)
    print("\nFiles\n=====")
    print("\n".join(f.filename for f in files))
    print("({:d} files)".format(len(files)))
    

def print_file_count(args):
    n_files = cgi.count_files(remote_dir=args.remote_dir)
    title = "Number of files in {}".format(args.remote_dir)
    print("\n{}\n{}".format(title, "=" * len(title)))
    print(n_files)


if __name__ == "__main__":
    run()
   
